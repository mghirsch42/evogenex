import scipy.optimize as opt

b = [8,9,1,5,12,21,2,9,18,14,5,2,3,3,15,2,2,2,3,1,5,1,3,6,3,1]  # Branch lenghts (b hat)
n = len(b)+1
rtt = 100

def z(x):
    res = sum([b[i] * (1 - x[i])**2 for i in range(len(b))])
    return res

bounds = opt.Bounds([0]*n, [10]*n)
lin_const = opt.LinearConstraint([[ b[0], b[1],    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,-rtt],
                                  [ b[0],    0, b[2],    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,-rtt],
                                  [    0,    0,    0, b[3], b[4],    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,-rtt],
                                  [    0,    0,    0, b[3],    0, b[5],    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,-rtt],
                                  [    0,    0,    0, b[3],    0,    0, b[6],    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,-rtt],
                                  [    0,    0,    0,    0,    0,    0,    0, b[7], b[8],    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,-rtt],
                                  [    0,    0,    0,    0,    0,    0,    0, b[7],    0, b[9],    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,-rtt],
                                  [    0,    0,    0,    0,    0,    0,    0, b[7],    0,    0,b[10],    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,-rtt],
                                  [    0,    0,    0,    0,    0,    0,    0, b[7],    0,    0,    0,b[11],    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,-rtt],
                                  [    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,b[12],b[13],    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,-rtt],
                                  [    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,b[12],    0,b[14],b[15],    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,-rtt],
                                  [    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,b[12],    0,b[14],    0,b[16],    0,    0,    0,    0,    0,    0,    0,    0,    0,-rtt],
                                  [    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,b[12],    0,    0,    0,    0,b[17],b[18],    0,    0,    0,    0,    0,    0,    0,-rtt],
                                  [    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,b[12],    0,    0,    0,    0,b[17],    0,b[19],b[20],    0,    0,    0,    0,    0,-rtt],
                                  [    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,b[12],    0,    0,    0,    0,b[17],    0,b[19],    0,b[21],b[22],    0,    0,    0,-rtt],
                                  [    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,b[12],    0,    0,    0,    0,b[17],    0,b[19],    0,b[21],    0,b[23],b[24],    0,-rtt],
                                  [    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,b[12],    0,    0,    0,    0,b[17],    0,b[19],    0,b[21],    0,b[23],    0,b[25],-rtt],
                                  ], 
                                 [0]*17, [0]*17)

x0 = [1]*n

res = opt.minimize(z, x0, method="trust-constr", constraints=[lin_const], bounds=bounds, options={"verbose":1})

print(res.x)

t = res.x[:-1] * b / res.x[-1]

print(t)